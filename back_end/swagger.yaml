swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/UserProfileResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserUpdatePayload'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/UserUpdateResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/accounts/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get Account Details
      description: Retrieve details of a specific user account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          description: ID of the account to retrieve
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Account details retrieved successfully
          schema:
            $ref: '#/definitions/AccountsResponse'  

  /user/accounts/{id}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get Transactions for a Specific Account
      description: Retrieve transactions for a specific user account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          description: ID of the account to retrieve transactions
          required: true
          type: string  
        - in: query
          name: startDate
          description: Optional start date for filtering transactions
          required: false
          type: string
        - in: query
          name: endDate
          description: Optional end date for filtering transactions
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'

  /user/transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get Transaction Details
      description: Retrieve details of a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          description: ID of the transaction to retrieve
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionItems'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error 
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Transaction
      description: Update details of a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Update details of the transaction
          required: true
          schema:
            $ref: '#/definitions/UpdateTransactionPayload'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name

  Login:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfileResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string

  UserUpdatePayload:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string

  UserUpdateResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/UserProfileResponse'

  AccountsResponse:
    type: object
    properties:
      accountType:
        type: string
        enum:
          - 'checking'
          - 'savings'
          - 'credit-card'
          - 'new-account-type'
      availableBalance:
        type: number    

  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/TransactionItems'
          
  TransactionItems:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
        description: Date of the transaction
      description:
        type: string
        description: Label of the transaction
      amount:
        type: number
        description: Amount of the transaction
      balance:
        type: number
        description: Total account balance after the transaction
      details:
        $ref: '#/definitions/TransactionDetails'  

  TransactionDetails:
    type: object
    properties:
      type:
        type: string
        description: 'Type of the transaction (read-only). Expected value: electronic'
      category:
        type: string
        description: Category of the transaction
        enum: ['category1', 'category2', 'category3']
      notes:
        type: string
        description: Notes for the transaction

  UpdateTransactionPayload:
    type: object
    properties:
      category:
        type: string
        description: Updated category for the transaction
      notes:
        type: string
        description: Updated notes for the transaction    

